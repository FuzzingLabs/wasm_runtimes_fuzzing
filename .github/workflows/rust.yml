name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Check code style quickly by running `rustfmt` over all code
  rustfmt:
    name: Check Rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt

      - name: Run cargo fmt
        run: cd warf && make check-fmt

  build:
    name: Building warf cli
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: Build
        run: cd warf && make build

# Try to compile the dockerfile
  build-docker:
    name: Building docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: Build Docker
        run: cd warf && make docker

  # Try to compile one debug target and run it 
  test-debug:
    name: Test one debug target
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      - name: Test debug
        run: cd warf && make test-debug

  # Try to run all target over libfuzzer
  test-libfuzzer:
    name: Test libfuzzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
  
      - name: install cargo-fuzz
        run: cargo +nightly install --force cargo-fuzz
      - name: Test libfuzzer
        run: cd warf && make test-libfuzzer

  # Try to run all target over honggfuzz
  test-honggfuzz:
    name: Test honggfuzz
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: install honggfuzz dependencies
        run: |
          sudo apt-get update
          sudo apt install -y build-essential binutils-dev libunwind-dev libblocksruntime-dev
      - name: install honggfuzz
        run: cargo +nightly install --force honggfuzz
      - name: Test honggfuzz
        run: cd warf && make test-honggfuzz

  # Try to run all target over afl
  test-afl:
    name: Test afl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: install afl dependencies
        run: |
          sudo apt-get update
          sudo apt install -y llvm build-essential libtool-bin python3 cmake automake bison libglib2.0-dev libpixman-1-dev clang python-setuptools
      - name: install afl
        run: cargo +nightly install --force afl
      - name: Test afl
        run: cd warf && make test-afl
